0- getting basic django+postgres env working with docker
    - created dir ws_data
    - run docker-compose run web-service django-admin startproject takehome_ws .
    - run docker-compose up

1- associate postgres to django
    - modify settings.py
    - run docker-compose up

2- creating simple script to load data from csv to postgres
    ? the statement is direct about creating a table schema for the csv data, even if there's a lot of duplication
    ? the data from csv must be loaded *into* the table
    ? lots of empty values for the averages, but not sure if this is an important information for analysts
    ? the statement is direct about creating the table *before* using django.
    - create straightforward python script for creating db schema
        ? as I know this will be loaded into django, I'm using field types and Django friendly names
    - create straightforward python script for loading data from the csv to the db
        ? I don't have any information about the expected format of the fields and importance of empty fields
        - empty values are being kept as nulls because I don't know if I could drop those entries
        - the script is slow because it commits a transaction at every insert and because it is serial
            - it can be improved later using execute_values for example

3- Make django wait for postgres to start

4- Update the script so it load data from the csv in batches

5- Add Django rest framework to requirements
    - added rest framework app to INSTALLED_APPS
    - added REST_FRAMEWORK entry in settings.py

6- Create land temperature application on django
    - create the app using start app
    - added land temperatures app to INSTALLED_APPS
    - create model to land temperatures table using inspectdb:
        - get models.py from python manage.py inspectdb
        - generate migrations with python manage.py makemigrations land_temperatures
        - then initialize migration db python manage.py migrate land_temperatures --fake
        - migrate with python manage.py migrate
        - set managed as true
        - updated docker-compose

    - generate simple view with DRF and write basic tests for it

7- implement view for creating a new land temperature record
    - generate tests
    - update views





